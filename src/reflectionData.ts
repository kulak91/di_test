// This file was autogenerated by aero-di. It is recommended to not change it
/* eslint-disable no-restricted-imports */
import { Logger as Logger_0 } from "./services/logger.service";
import { HTTPService as HTTPService_1 } from "./services/http.service";
import { ParentClass as ParentClass_2 } from "./index";
import { ChildClass as ChildClass_3 } from "./index";
import { MyTestClass as MyTestClass_4 } from "./test";

export interface ParameterData {
  name: string;
  type: string;
}

export interface PropertyData {
  name: string;
  type: string;
  visibility: "public" | "protected" | "private";
}

export interface MethodData {
  name: string;
  parameters: ParameterData[];
  returnType: string;
  visibility: "public" | "protected" | "private";
}

// eslint-disable-next-line @typescript-eslint/no-explicit-any
type Constructor = new (...args: any[]) => any;
export interface ClassData {
  fqcn: string;
  name: string;
  ctor: Constructor | null;
  implementsInterfaces: string[];
  extendsClass: string | null;
  constructorParameters: ParameterData[];
  constructorVisibility: "public" | "protected" | "private";
  isAbstract: boolean;
  properties: PropertyData[];
  methods: MethodData[];
  isExported: boolean;
  exportMethod: "named" | "default";
}

export interface InterfaceData {
  fqin: string;
  name: string;
  properties: PropertyData[];
  extendsInterface: string | null;
  methods: MethodData[];
  isExported: boolean;
  exportMethod: "named" | "default";
}

export const classesReflection: ClassData[] = [
  {
    fqcn: "services/logger.service/Logger",
    name: "Logger",
    ctor: Logger_0,
    implementsInterfaces: [],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [
      {
        name: "info",
        returnType: "void",
        parameters: [{ name: "...data", type: "unknown[]" }],
        visibility: "public",
      },
      {
        name: "panic",
        returnType: "void",
        parameters: [{ name: "...data", type: "unknown[]" }],
        visibility: "public",
      },
    ],
    isExported: true,
    exportMethod: "named",
  },
  {
    fqcn: "services/http.service/HTTPService",
    name: "HTTPService",
    ctor: HTTPService_1,
    implementsInterfaces: [],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [
      {
        name: "load",
        returnType: "Promise<T|undefined>",
        parameters: [
          { name: "path", type: "string" },
          {
            name: "options?",
            type: "{method:SendRequestMethod,body:Record<string,unknown>}",
          },
        ],
        visibility: "private",
      },
      {
        name: "send",
        returnType: "Promise<T|undefined>",
        parameters: [
          { name: "path", type: "string" },
          {
            name: "options?",
            type: "{method:SendRequestMethod,body:Record<string,unknown>}",
          },
        ],
        visibility: "public",
      },
    ],
    isExported: true,
    exportMethod: "named",
  },
  {
    fqcn: "index/ParentClass",
    name: "ParentClass",
    ctor: ParentClass_2,
    implementsInterfaces: ["ParentInterface"],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [
      { name: "httpService", type: "HTTPService", visibility: "public" },
    ],
    methods: [],
    isExported: true,
    exportMethod: "named",
  },
  {
    fqcn: "index/ChildClass",
    name: "ChildClass",
    ctor: ChildClass_3,
    implementsInterfaces: [],
    extendsClass: "ParentClass",
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [
      {
        name: "spyOn",
        returnType: "Promise<void>",
        parameters: [{ name: "dude", type: "string='what1slove'" }],
        visibility: "public",
      },
    ],
    isExported: true,
    exportMethod: "named",
  },
  {
    fqcn: "test/MyTestClass",
    name: "MyTestClass",
    ctor: MyTestClass_4,
    implementsInterfaces: [],
    extendsClass: null,
    constructorVisibility: "public",
    constructorParameters: [],
    isAbstract: false,
    properties: [],
    methods: [],
    isExported: true,
    exportMethod: "named",
  },
];

export const interfacesReflection: InterfaceData[] = [];
